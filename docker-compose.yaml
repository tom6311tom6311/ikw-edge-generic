version: "3.3"

services:
  influxdb:
    build:
      context: influxdb/
    ports:
      - 10861:8086
    restart: always
    volumes:
      - type: bind
        source: ./influxdb/data
        target: /var/lib/influxdb2
    networks:
      - main
  mqtt:
    build:
      context: mqtt/
    volumes:
      - type: bind
        source: ./mqtt/conf/mosquitto.conf
        target: /mosquitto/config/mosquitto.conf
        read_only: true
      - type: bind
        source: ./mqtt/log
        target: /mosquitto/log
      - type: bind
        source: ./mqtt/data
        target: /mosquitto/data
    ports:
      - 18831:1883
    networks:
      - main
  mqtt_bridge:
    build:
      context: mqtt_bridge/
    volumes:
      - type: bind
        source: ./mqtt_bridge/conf/opSpec.json
        target: /conf/opSpec.json
        read_only: true
      - type: bind
        source: ./mqtt_bridge/log
        target: /log
    environment:
      INFLUX_ORG: $INFLUX_ORG
      INFLUX_TOKEN: $INFLUX_TOKEN
      INFLUX_BUCKET: $INFLUX_BUCKET
    networks:
      - main
  camera-worker:
    build:
      context: ./camera-worker
    volumes:
      - type: bind
        source: ./camera-worker/snapshots
        target: /usr/src/app/snapshots
    networks:
        - main
  siras-manager-fe:
    build:
      context: ./siras-manager-fe
    environment:
      REACT_APP_BACKEND_PORT: 14001
    ports:
      - 3080:80
    networks:
        - main
  siras-manager-be:
    build:
      context: ./siras-manager-be
    volumes:
      - type: bind
        source: ./camera-worker/snapshots
        target: /app/snapshots
    environment:
      INFLUX_ORG: $INFLUX_ORG
      INFLUX_TOKEN: $INFLUX_TOKEN
      INFLUX_BUCKET: $INFLUX_BUCKET
      INFLUX_HOST: $INFLUX_HOST
      INFLUX_PORT: $INFLUX_PORT
      JWT_SECRET: $JWT_SECRET
    ports:
      - 14001:4000
    networks:
        - main
networks:
  main:
    driver: bridge

volumes:
  mqtt_data:
